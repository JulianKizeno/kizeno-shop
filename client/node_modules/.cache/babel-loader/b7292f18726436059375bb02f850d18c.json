{"ast":null,"code":"import axios from 'axios';\nexport default class services {\n  constructor() {\n    this.getProducts = () => this.service.get('products/allProducts');\n\n    this.getProduct = productId => this.service.get(`products/oneProduct/${productId}`);\n\n    this.saveProduct = theProduct => this.service.post(`products/postProduct`, theProduct);\n\n    this.deleteProduct = id => this.service.post(`products/${id}/delete`, id);\n\n    this.updateProduct = id => this.service.post(`products/${id}/update`, upProduct);\n\n    this.service = axios.create({\n      baseURL: 'http://localhost:5000/api',\n      withCredentials: true\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/juliankizeno/Desktop/ironhack/labs/week8/final-project/kizeno-shop/client/src/service/product.service.js"],"names":["axios","services","constructor","getProducts","service","get","getProduct","productId","saveProduct","theProduct","post","deleteProduct","id","updateProduct","upProduct","create","baseURL","withCredentials"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,QAAN,CAAe;AAC1BC,EAAAA,WAAW,GAAG;AAAA,SAOdC,WAPc,GAOA,MAAM,KAAKC,OAAL,CAAaC,GAAb,CAAiB,sBAAjB,CAPN;;AAAA,SAQdC,UARc,GAQDC,SAAS,IAAI,KAAKH,OAAL,CAAaC,GAAb,CAAkB,uBAAsBE,SAAU,EAAlD,CARZ;;AAAA,SASdC,WATc,GASAC,UAAU,IAAI,KAAKL,OAAL,CAAaM,IAAb,CAAmB,sBAAnB,EAA0CD,UAA1C,CATd;;AAAA,SAUdE,aAVc,GAUEC,EAAE,IAAI,KAAKR,OAAL,CAAaM,IAAb,CAAmB,YAAWE,EAAG,SAAjC,EAA2CA,EAA3C,CAVR;;AAAA,SAWdC,aAXc,GAWED,EAAE,IAAI,KAAKR,OAAL,CAAaM,IAAb,CAAmB,YAAWE,EAAG,SAAjC,EAA2CE,SAA3C,CAXR;;AACV,SAAKV,OAAL,GAAeJ,KAAK,CAACe,MAAN,CAAa;AACxBC,MAAAA,OAAO,EAAE,2BADe;AAExBC,MAAAA,eAAe,EAAE;AAFO,KAAb,CAAf;AAIH;;AANyB","sourcesContent":["import axios from 'axios'\n\nexport default class services {\n    constructor() {\n        this.service = axios.create({\n            baseURL: 'http://localhost:5000/api',\n            withCredentials: true\n        })\n    }\n\n    getProducts = () => this.service.get('products/allProducts')\n    getProduct = productId => this.service.get(`products/oneProduct/${productId}`)\n    saveProduct = theProduct => this.service.post(`products/postProduct`, theProduct)\n    deleteProduct = id => this.service.post(`products/${id}/delete`, id)\n    updateProduct = id => this.service.post(`products/${id}/update`, upProduct)\n}"]},"metadata":{},"sourceType":"module"}